1.  How did viewing a diff between two versions of a file help you see the bug that
 was introduced?

It high-lighted the lines that were different so it was easy to spot the differences.

2.  How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

It would be easier to go back and view old versions of the file to find where
changes were made.

3.  What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google Docs
 does?

Manually committing requires the user to make a judgement about when to save, and
they might not be consistent when and why they save.

4.  Why do you think some version control systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file separately?

Git seems to be version control system for software developers who use multiple
interconnected files; whereas Google Docs seems geared to the generalist doc user who
is often dealing with one file at a time.

5.  How can you use the commands git log and git diff to view the history of files?

You can use git log to find the various time-stamped entries with a note about
the changes; and then you can use git diff to list the differences between
two git log entries.

6.  How might using version control make you more confident to make changes that could break something?

You can go ahead and make changes, even catastrophic changes, with the surety that you can 
easily go back to an older working version.

7.  Now that you have your workspace set up, what do you want to try using Git for?

Doing git commits and git diffs.
